{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","numbers","Array","from","keys","App","useState","isVisible","setIsVisible","goods","setGoods","goodLength","setGoodLength","className","type","onClick","current","map","good","reverse","sort","a","b","localeCompare","length","value","onChange","event","newGoods","filter","Number","target","elem","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAAoBC,MAAMC,KAAKD,MAAM,IAAIE,QA4GhCC,EA1GO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAASN,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAoCJ,mBAAS,KAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KA+BA,OACE,sBAAKC,UAAU,MAAf,UACGN,GACC,wBACEM,UAAU,iBACVC,KAAK,SACLC,QAVU,WAChBP,GAAa,SAACQ,GAAD,OAAcA,MAMvB,oBAQAT,GACA,qCACE,gCACE,sBAAKM,UAAU,WAAf,UACE,oBAAIA,UAAU,kBAAd,mBAGA,oBAAIA,UAAU,iBAAd,SACGJ,EAAMQ,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,WAMf,sBAAKL,UAAU,SAAf,UACE,wBACEA,UAAU,iBACVC,KAAK,SACLC,QA3DQ,WACpBL,GAAS,SAACM,GAAD,OAAa,YAAIA,GAASG,cAuDzB,qBAOA,wBACEN,UAAU,iBACVC,KAAK,SACLC,QA9DM,WAClBL,GAAS,SAACM,GAAD,OAAa,YAAIA,GAASI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,UA0DxD,4BAOA,wBACET,UAAU,iBACVC,KAAK,SACLC,QAjEK,WACjBL,EAASV,IA6DC,mBAOA,wBACEa,UAAU,iBACVC,KAAK,SACLC,QApEY,WACxBL,GAAS,SAACM,GAAD,OAAa,YAAIA,GAASI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,cAgErD,oCAUJ,wBAAOX,UAAU,QAAjB,gCAEE,wBAAQY,MAAOd,EAAYe,SAzEhB,SAACC,GACpB,IAAMC,EAAW5B,EAAgB6B,QAC/B,SAAAX,GAAI,OAAIA,EAAKM,QAAUM,OAAOH,EAAMI,OAAON,UAG7Cb,EAAce,EAAMI,OAAON,OAC3Bf,EAASkB,IAmED,SACG3B,EAAQgB,KAAI,SAAAe,GAAI,OACf,wBAAmBP,MAAOO,EAAO,EAAjC,SAAqCA,EAAO,GAA/BA,kBC9G7BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.caef41c1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst numbers: number[] = Array.from(Array(10).keys());\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [goodLength, setGoodLength] = useState('1');\n\n  const reversedGoods = () => {\n    setGoods((current) => [...current].reverse());\n  };\n\n  const sortedGoods = () => {\n    setGoods((current) => [...current].sort((a, b) => a.localeCompare(b)));\n  };\n\n  const resetGoods = () => {\n    setGoods(goodsFromServer);\n  };\n\n  const sortByLengthGoods = () => {\n    setGoods((current) => [...current].sort((a, b) => a.length - b.length));\n  };\n\n  const changeLength = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newGoods = goodsFromServer.filter(\n      good => good.length >= Number(event.target.value),\n    );\n\n    setGoodLength(event.target.value);\n    setGoods(newGoods);\n  };\n\n  const showGoods = () => {\n    setIsVisible((current) => !current);\n  };\n\n  return (\n    <div className=\"App\">\n      {isVisible && (\n        <button\n          className=\"initial-button\"\n          type=\"button\"\n          onClick={showGoods}\n        >\n          Start\n        </button>\n      )}\n      {!isVisible && (\n        <>\n          <div>\n            <div className=\"products\">\n              <h1 className=\"products__title\">\n                Goods\n              </h1>\n              <ul className=\"products__list\">\n                {goods.map((good) => (\n                  <li key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"button\">\n              <button\n                className=\"button__choose\"\n                type=\"button\"\n                onClick={reversedGoods}\n              >\n                Reverse\n              </button>\n              <button\n                className=\"button__choose\"\n                type=\"button\"\n                onClick={sortedGoods}\n              >\n                Sorted by Name\n              </button>\n              <button\n                className=\"button__choose\"\n                type=\"button\"\n                onClick={resetGoods}\n              >\n                Reset\n              </button>\n              <button\n                className=\"button__choose\"\n                type=\"button\"\n                onClick={sortByLengthGoods}\n              >\n                Sorted by Length\n              </button>\n            </div>\n          </div>\n\n          <label className=\"label\">\n            Choose good length:\n            <select value={goodLength} onChange={changeLength}>\n              {numbers.map(elem => (\n                <option key={elem} value={elem + 1}>{elem + 1}</option>\n              ))}\n            </select>\n          </label>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}